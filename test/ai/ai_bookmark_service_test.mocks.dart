// Mocks generated by Mockito 5.4.6 from annotations
// in pinboard_wizard/test/ai/ai_bookmark_service_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i8;
import 'dart:ui' as _i9;

import 'package:mockito/mockito.dart' as _i1;
import 'package:pinboard_wizard/src/ai/ai_settings.dart' as _i2;
import 'package:pinboard_wizard/src/ai/ai_settings_service.dart' as _i3;
import 'package:pinboard_wizard/src/ai/openai/models/bookmark_suggestions.dart'
    as _i4;
import 'package:pinboard_wizard/src/ai/openai/openai_service.dart' as _i5;
import 'package:pinboard_wizard/src/ai/web_scraping/jina_service.dart' as _i7;
import 'package:pinboard_wizard/src/ai/web_scraping/models/scraped_content.dart'
    as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeAiSettings_0 extends _i1.SmartFake implements _i2.AiSettings {
  _FakeAiSettings_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeOpenAiSettings_1 extends _i1.SmartFake
    implements _i2.OpenAiSettings {
  _FakeOpenAiSettings_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeWebScrapingSettings_2 extends _i1.SmartFake
    implements _i2.WebScrapingSettings {
  _FakeWebScrapingSettings_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeOpenAiTestResult_3 extends _i1.SmartFake
    implements _i3.OpenAiTestResult {
  _FakeOpenAiTestResult_3(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeJinaTestResult_4 extends _i1.SmartFake
    implements _i3.JinaTestResult {
  _FakeJinaTestResult_4(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeBookmarkSuggestions_5 extends _i1.SmartFake
    implements _i4.BookmarkSuggestions {
  _FakeBookmarkSuggestions_5(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeOpenAiKeyInfo_6 extends _i1.SmartFake implements _i5.OpenAiKeyInfo {
  _FakeOpenAiKeyInfo_6(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeScrapedContent_7 extends _i1.SmartFake
    implements _i6.ScrapedContent {
  _FakeScrapedContent_7(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeJinaKeyInfo_8 extends _i1.SmartFake implements _i7.JinaKeyInfo {
  _FakeJinaKeyInfo_8(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [AiSettingsService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAiSettingsService extends _i1.Mock implements _i3.AiSettingsService {
  MockAiSettingsService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.AiSettings get settings =>
      (super.noSuchMethod(
            Invocation.getter(#settings),
            returnValue: _FakeAiSettings_0(this, Invocation.getter(#settings)),
          )
          as _i2.AiSettings);

  @override
  bool get isEnabled =>
      (super.noSuchMethod(Invocation.getter(#isEnabled), returnValue: false)
          as bool);

  @override
  bool get canUseAi =>
      (super.noSuchMethod(Invocation.getter(#canUseAi), returnValue: false)
          as bool);

  @override
  _i2.OpenAiSettings get openaiSettings =>
      (super.noSuchMethod(
            Invocation.getter(#openaiSettings),
            returnValue: _FakeOpenAiSettings_1(
              this,
              Invocation.getter(#openaiSettings),
            ),
          )
          as _i2.OpenAiSettings);

  @override
  _i2.WebScrapingSettings get webScrapingSettings =>
      (super.noSuchMethod(
            Invocation.getter(#webScrapingSettings),
            returnValue: _FakeWebScrapingSettings_2(
              this,
              Invocation.getter(#webScrapingSettings),
            ),
          )
          as _i2.WebScrapingSettings);

  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);

  @override
  _i8.Future<void> setAiEnabled(bool? enabled) =>
      (super.noSuchMethod(
            Invocation.method(#setAiEnabled, [enabled]),
            returnValue: _i8.Future<void>.value(),
            returnValueForMissingStub: _i8.Future<void>.value(),
          )
          as _i8.Future<void>);

  @override
  _i8.Future<void> setOpenAiApiKey(String? apiKey) =>
      (super.noSuchMethod(
            Invocation.method(#setOpenAiApiKey, [apiKey]),
            returnValue: _i8.Future<void>.value(),
            returnValueForMissingStub: _i8.Future<void>.value(),
          )
          as _i8.Future<void>);

  @override
  _i8.Future<void> setJinaApiKey(String? apiKey) =>
      (super.noSuchMethod(
            Invocation.method(#setJinaApiKey, [apiKey]),
            returnValue: _i8.Future<void>.value(),
            returnValueForMissingStub: _i8.Future<void>.value(),
          )
          as _i8.Future<void>);

  @override
  _i8.Future<void> setDescriptionMaxLength(int? length) =>
      (super.noSuchMethod(
            Invocation.method(#setDescriptionMaxLength, [length]),
            returnValue: _i8.Future<void>.value(),
            returnValueForMissingStub: _i8.Future<void>.value(),
          )
          as _i8.Future<void>);

  @override
  _i8.Future<void> setMaxTags(int? maxTags) =>
      (super.noSuchMethod(
            Invocation.method(#setMaxTags, [maxTags]),
            returnValue: _i8.Future<void>.value(),
            returnValueForMissingStub: _i8.Future<void>.value(),
          )
          as _i8.Future<void>);

  @override
  _i8.Future<void> clearOpenAiSettings() =>
      (super.noSuchMethod(
            Invocation.method(#clearOpenAiSettings, []),
            returnValue: _i8.Future<void>.value(),
            returnValueForMissingStub: _i8.Future<void>.value(),
          )
          as _i8.Future<void>);

  @override
  _i8.Future<void> clearWebScrapingSettings() =>
      (super.noSuchMethod(
            Invocation.method(#clearWebScrapingSettings, []),
            returnValue: _i8.Future<void>.value(),
            returnValueForMissingStub: _i8.Future<void>.value(),
          )
          as _i8.Future<void>);

  @override
  _i8.Future<void> clearAllAiSettings() =>
      (super.noSuchMethod(
            Invocation.method(#clearAllAiSettings, []),
            returnValue: _i8.Future<void>.value(),
            returnValueForMissingStub: _i8.Future<void>.value(),
          )
          as _i8.Future<void>);

  @override
  _i8.Future<bool> validateOpenAiApiKey(String? apiKey) =>
      (super.noSuchMethod(
            Invocation.method(#validateOpenAiApiKey, [apiKey]),
            returnValue: _i8.Future<bool>.value(false),
          )
          as _i8.Future<bool>);

  @override
  _i8.Future<bool> validateJinaApiKey(String? apiKey) =>
      (super.noSuchMethod(
            Invocation.method(#validateJinaApiKey, [apiKey]),
            returnValue: _i8.Future<bool>.value(false),
          )
          as _i8.Future<bool>);

  @override
  _i8.Future<_i3.OpenAiTestResult> testOpenAiConnection(String? apiKey) =>
      (super.noSuchMethod(
            Invocation.method(#testOpenAiConnection, [apiKey]),
            returnValue: _i8.Future<_i3.OpenAiTestResult>.value(
              _FakeOpenAiTestResult_3(
                this,
                Invocation.method(#testOpenAiConnection, [apiKey]),
              ),
            ),
          )
          as _i8.Future<_i3.OpenAiTestResult>);

  @override
  _i8.Future<_i3.JinaTestResult> testJinaConnection(String? apiKey) =>
      (super.noSuchMethod(
            Invocation.method(#testJinaConnection, [apiKey]),
            returnValue: _i8.Future<_i3.JinaTestResult>.value(
              _FakeJinaTestResult_4(
                this,
                Invocation.method(#testJinaConnection, [apiKey]),
              ),
            ),
          )
          as _i8.Future<_i3.JinaTestResult>);

  @override
  void addListener(_i9.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#addListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void removeListener(_i9.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#removeListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );

  @override
  void notifyListeners() => super.noSuchMethod(
    Invocation.method(#notifyListeners, []),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [OpenAiService].
///
/// See the documentation for Mockito's code generation for more information.
class MockOpenAiService extends _i1.Mock implements _i5.OpenAiService {
  MockOpenAiService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get isInitialized =>
      (super.noSuchMethod(Invocation.getter(#isInitialized), returnValue: false)
          as bool);

  @override
  void initialize(String? apiKey) => super.noSuchMethod(
    Invocation.method(#initialize, [apiKey]),
    returnValueForMissingStub: null,
  );

  @override
  _i8.Future<_i4.BookmarkSuggestions> analyzeContent({
    required String? url,
    required _i6.ScrapedContent? content,
    required int? maxDescriptionLength,
    required int? maxTags,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#analyzeContent, [], {
              #url: url,
              #content: content,
              #maxDescriptionLength: maxDescriptionLength,
              #maxTags: maxTags,
            }),
            returnValue: _i8.Future<_i4.BookmarkSuggestions>.value(
              _FakeBookmarkSuggestions_5(
                this,
                Invocation.method(#analyzeContent, [], {
                  #url: url,
                  #content: content,
                  #maxDescriptionLength: maxDescriptionLength,
                  #maxTags: maxTags,
                }),
              ),
            ),
          )
          as _i8.Future<_i4.BookmarkSuggestions>);

  @override
  _i8.Future<bool> testConnection() =>
      (super.noSuchMethod(
            Invocation.method(#testConnection, []),
            returnValue: _i8.Future<bool>.value(false),
          )
          as _i8.Future<bool>);

  @override
  _i8.Future<_i5.OpenAiKeyInfo> getApiKeyInfo() =>
      (super.noSuchMethod(
            Invocation.method(#getApiKeyInfo, []),
            returnValue: _i8.Future<_i5.OpenAiKeyInfo>.value(
              _FakeOpenAiKeyInfo_6(this, Invocation.method(#getApiKeyInfo, [])),
            ),
          )
          as _i8.Future<_i5.OpenAiKeyInfo>);

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [JinaService].
///
/// See the documentation for Mockito's code generation for more information.
class MockJinaService extends _i1.Mock implements _i7.JinaService {
  MockJinaService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get isInitialized =>
      (super.noSuchMethod(Invocation.getter(#isInitialized), returnValue: false)
          as bool);

  @override
  bool get hasApiKey =>
      (super.noSuchMethod(Invocation.getter(#hasApiKey), returnValue: false)
          as bool);

  @override
  void initialize(String? apiKey) => super.noSuchMethod(
    Invocation.method(#initialize, [apiKey]),
    returnValueForMissingStub: null,
  );

  @override
  _i8.Future<_i6.ScrapedContent> scrapeUrl(String? url) =>
      (super.noSuchMethod(
            Invocation.method(#scrapeUrl, [url]),
            returnValue: _i8.Future<_i6.ScrapedContent>.value(
              _FakeScrapedContent_7(this, Invocation.method(#scrapeUrl, [url])),
            ),
          )
          as _i8.Future<_i6.ScrapedContent>);

  @override
  _i8.Future<bool> testConnection() =>
      (super.noSuchMethod(
            Invocation.method(#testConnection, []),
            returnValue: _i8.Future<bool>.value(false),
          )
          as _i8.Future<bool>);

  @override
  _i8.Future<_i7.JinaKeyInfo> getApiKeyInfo() =>
      (super.noSuchMethod(
            Invocation.method(#getApiKeyInfo, []),
            returnValue: _i8.Future<_i7.JinaKeyInfo>.value(
              _FakeJinaKeyInfo_8(this, Invocation.method(#getApiKeyInfo, [])),
            ),
          )
          as _i8.Future<_i7.JinaKeyInfo>);

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );
}
