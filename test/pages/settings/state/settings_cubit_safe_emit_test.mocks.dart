// Mocks generated by Mockito 5.4.6 from annotations
// in pinboard_wizard/test/pages/settings/state/settings_cubit_safe_emit_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i9;
import 'dart:ui' as _i13;

import 'package:flutter/foundation.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:pinboard_wizard/src/ai/ai_settings.dart' as _i5;
import 'package:pinboard_wizard/src/ai/ai_settings_service.dart' as _i6;
import 'package:pinboard_wizard/src/backup/backup_service.dart' as _i14;
import 'package:pinboard_wizard/src/backup/models/s3_config.dart' as _i7;
import 'package:pinboard_wizard/src/pinboard/credentials_service.dart' as _i8;
import 'package:pinboard_wizard/src/pinboard/models/credentials.dart' as _i10;
import 'package:pinboard_wizard/src/pinboard/models/note.dart' as _i12;
import 'package:pinboard_wizard/src/pinboard/models/notes_response.dart' as _i4;
import 'package:pinboard_wizard/src/pinboard/models/post.dart' as _i11;
import 'package:pinboard_wizard/src/pinboard/pinboard_service.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeValueNotifier_0<T> extends _i1.SmartFake
    implements _i2.ValueNotifier<T> {
  _FakeValueNotifier_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeBookmarkStats_1 extends _i1.SmartFake implements _i3.BookmarkStats {
  _FakeBookmarkStats_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeDateTime_2 extends _i1.SmartFake implements DateTime {
  _FakeDateTime_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeNoteDetailResponse_3 extends _i1.SmartFake
    implements _i4.NoteDetailResponse {
  _FakeNoteDetailResponse_3(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeAiSettings_4 extends _i1.SmartFake implements _i5.AiSettings {
  _FakeAiSettings_4(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeOpenAiSettings_5 extends _i1.SmartFake
    implements _i5.OpenAiSettings {
  _FakeOpenAiSettings_5(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeWebScrapingSettings_6 extends _i1.SmartFake
    implements _i5.WebScrapingSettings {
  _FakeWebScrapingSettings_6(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeOpenAiTestResult_7 extends _i1.SmartFake
    implements _i6.OpenAiTestResult {
  _FakeOpenAiTestResult_7(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeJinaTestResult_8 extends _i1.SmartFake
    implements _i6.JinaTestResult {
  _FakeJinaTestResult_8(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeS3Config_9 extends _i1.SmartFake implements _i7.S3Config {
  _FakeS3Config_9(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [CredentialsService].
///
/// See the documentation for Mockito's code generation for more information.
class MockCredentialsService extends _i1.Mock
    implements _i8.CredentialsService {
  MockCredentialsService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.ValueNotifier<bool> get isAuthenticatedNotifier =>
      (super.noSuchMethod(
            Invocation.getter(#isAuthenticatedNotifier),
            returnValue: _FakeValueNotifier_0<bool>(
              this,
              Invocation.getter(#isAuthenticatedNotifier),
            ),
          )
          as _i2.ValueNotifier<bool>);

  @override
  _i9.Future<_i10.Credentials?> getCredentials() =>
      (super.noSuchMethod(
            Invocation.method(#getCredentials, []),
            returnValue: _i9.Future<_i10.Credentials?>.value(),
          )
          as _i9.Future<_i10.Credentials?>);

  @override
  _i9.Future<void> saveCredentials(String? apiKey) =>
      (super.noSuchMethod(
            Invocation.method(#saveCredentials, [apiKey]),
            returnValue: _i9.Future<void>.value(),
            returnValueForMissingStub: _i9.Future<void>.value(),
          )
          as _i9.Future<void>);

  @override
  _i9.Future<void> clearCredentials() =>
      (super.noSuchMethod(
            Invocation.method(#clearCredentials, []),
            returnValue: _i9.Future<void>.value(),
            returnValueForMissingStub: _i9.Future<void>.value(),
          )
          as _i9.Future<void>);

  @override
  _i9.Future<bool> hasCredentials() =>
      (super.noSuchMethod(
            Invocation.method(#hasCredentials, []),
            returnValue: _i9.Future<bool>.value(false),
          )
          as _i9.Future<bool>);

  @override
  bool isValidApiKey(String? apiKey) =>
      (super.noSuchMethod(
            Invocation.method(#isValidApiKey, [apiKey]),
            returnValue: false,
          )
          as bool);

  @override
  _i9.Future<bool> isAuthenticated() =>
      (super.noSuchMethod(
            Invocation.method(#isAuthenticated, []),
            returnValue: _i9.Future<bool>.value(false),
          )
          as _i9.Future<bool>);

  @override
  _i9.Future<void> debugCredentials() =>
      (super.noSuchMethod(
            Invocation.method(#debugCredentials, []),
            returnValue: _i9.Future<void>.value(),
            returnValueForMissingStub: _i9.Future<void>.value(),
          )
          as _i9.Future<void>);
}

/// A class which mocks [PinboardService].
///
/// See the documentation for Mockito's code generation for more information.
class MockPinboardService extends _i1.Mock implements _i3.PinboardService {
  MockPinboardService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i9.Future<bool> isAuthenticated() =>
      (super.noSuchMethod(
            Invocation.method(#isAuthenticated, []),
            returnValue: _i9.Future<bool>.value(false),
          )
          as _i9.Future<bool>);

  @override
  _i9.Future<bool> testConnection() =>
      (super.noSuchMethod(
            Invocation.method(#testConnection, []),
            returnValue: _i9.Future<bool>.value(false),
          )
          as _i9.Future<bool>);

  @override
  _i9.Future<List<_i11.Post>> getAllBookmarks({
    String? tag,
    int? start,
    int? results,
    DateTime? fromdt,
    DateTime? todt,
    int? meta,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getAllBookmarks, [], {
              #tag: tag,
              #start: start,
              #results: results,
              #fromdt: fromdt,
              #todt: todt,
              #meta: meta,
            }),
            returnValue: _i9.Future<List<_i11.Post>>.value(<_i11.Post>[]),
          )
          as _i9.Future<List<_i11.Post>>);

  @override
  _i9.Future<List<_i11.Post>> getRecentBookmarks({String? tag, int? count}) =>
      (super.noSuchMethod(
            Invocation.method(#getRecentBookmarks, [], {
              #tag: tag,
              #count: count,
            }),
            returnValue: _i9.Future<List<_i11.Post>>.value(<_i11.Post>[]),
          )
          as _i9.Future<List<_i11.Post>>);

  @override
  _i9.Future<List<_i11.Post>> searchBookmarks(String? query, {String? tag}) =>
      (super.noSuchMethod(
            Invocation.method(#searchBookmarks, [query], {#tag: tag}),
            returnValue: _i9.Future<List<_i11.Post>>.value(<_i11.Post>[]),
          )
          as _i9.Future<List<_i11.Post>>);

  @override
  _i9.Future<List<_i11.Post>> getBookmarksByTag(String? tag) =>
      (super.noSuchMethod(
            Invocation.method(#getBookmarksByTag, [tag]),
            returnValue: _i9.Future<List<_i11.Post>>.value(<_i11.Post>[]),
          )
          as _i9.Future<List<_i11.Post>>);

  @override
  _i9.Future<List<_i11.Post>> getToReadBookmarks() =>
      (super.noSuchMethod(
            Invocation.method(#getToReadBookmarks, []),
            returnValue: _i9.Future<List<_i11.Post>>.value(<_i11.Post>[]),
          )
          as _i9.Future<List<_i11.Post>>);

  @override
  _i9.Future<List<_i11.Post>> getPrivateBookmarks() =>
      (super.noSuchMethod(
            Invocation.method(#getPrivateBookmarks, []),
            returnValue: _i9.Future<List<_i11.Post>>.value(<_i11.Post>[]),
          )
          as _i9.Future<List<_i11.Post>>);

  @override
  _i9.Future<void> addBookmark({
    required String? url,
    required String? title,
    String? description,
    List<String>? tags,
    bool? shared = true,
    bool? toRead = false,
    bool? replace = false,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#addBookmark, [], {
              #url: url,
              #title: title,
              #description: description,
              #tags: tags,
              #shared: shared,
              #toRead: toRead,
              #replace: replace,
            }),
            returnValue: _i9.Future<void>.value(),
            returnValueForMissingStub: _i9.Future<void>.value(),
          )
          as _i9.Future<void>);

  @override
  _i9.Future<void> updateBookmark(_i11.Post? bookmark) =>
      (super.noSuchMethod(
            Invocation.method(#updateBookmark, [bookmark]),
            returnValue: _i9.Future<void>.value(),
            returnValueForMissingStub: _i9.Future<void>.value(),
          )
          as _i9.Future<void>);

  @override
  _i9.Future<void> deleteBookmark(String? url) =>
      (super.noSuchMethod(
            Invocation.method(#deleteBookmark, [url]),
            returnValue: _i9.Future<void>.value(),
            returnValueForMissingStub: _i9.Future<void>.value(),
          )
          as _i9.Future<void>);

  @override
  _i9.Future<_i11.Post?> getBookmark(String? url) =>
      (super.noSuchMethod(
            Invocation.method(#getBookmark, [url]),
            returnValue: _i9.Future<_i11.Post?>.value(),
          )
          as _i9.Future<_i11.Post?>);

  @override
  _i9.Future<bool> isBookmarked(String? url) =>
      (super.noSuchMethod(
            Invocation.method(#isBookmarked, [url]),
            returnValue: _i9.Future<bool>.value(false),
          )
          as _i9.Future<bool>);

  @override
  _i9.Future<Map<String, int>> getAllTags() =>
      (super.noSuchMethod(
            Invocation.method(#getAllTags, []),
            returnValue: _i9.Future<Map<String, int>>.value(<String, int>{}),
          )
          as _i9.Future<Map<String, int>>);

  @override
  _i9.Future<List<MapEntry<String, int>>> getPopularTags([int? limit]) =>
      (super.noSuchMethod(
            Invocation.method(#getPopularTags, [limit]),
            returnValue: _i9.Future<List<MapEntry<String, int>>>.value(
              <MapEntry<String, int>>[],
            ),
          )
          as _i9.Future<List<MapEntry<String, int>>>);

  @override
  _i9.Future<void> renameTag({
    required String? oldTag,
    required String? newTag,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#renameTag, [], {
              #oldTag: oldTag,
              #newTag: newTag,
            }),
            returnValue: _i9.Future<void>.value(),
            returnValueForMissingStub: _i9.Future<void>.value(),
          )
          as _i9.Future<void>);

  @override
  _i9.Future<void> deleteTag(String? tag) =>
      (super.noSuchMethod(
            Invocation.method(#deleteTag, [tag]),
            returnValue: _i9.Future<void>.value(),
            returnValueForMissingStub: _i9.Future<void>.value(),
          )
          as _i9.Future<void>);

  @override
  _i9.Future<List<String>> getSuggestedTags(String? url) =>
      (super.noSuchMethod(
            Invocation.method(#getSuggestedTags, [url]),
            returnValue: _i9.Future<List<String>>.value(<String>[]),
          )
          as _i9.Future<List<String>>);

  @override
  _i9.Future<_i3.BookmarkStats> getBookmarkStats() =>
      (super.noSuchMethod(
            Invocation.method(#getBookmarkStats, []),
            returnValue: _i9.Future<_i3.BookmarkStats>.value(
              _FakeBookmarkStats_1(
                this,
                Invocation.method(#getBookmarkStats, []),
              ),
            ),
          )
          as _i9.Future<_i3.BookmarkStats>);

  @override
  _i9.Future<DateTime> getLastUpdateTime() =>
      (super.noSuchMethod(
            Invocation.method(#getLastUpdateTime, []),
            returnValue: _i9.Future<DateTime>.value(
              _FakeDateTime_2(this, Invocation.method(#getLastUpdateTime, [])),
            ),
          )
          as _i9.Future<DateTime>);

  @override
  _i9.Future<String?> getUsername() =>
      (super.noSuchMethod(
            Invocation.method(#getUsername, []),
            returnValue: _i9.Future<String?>.value(),
          )
          as _i9.Future<String?>);

  @override
  _i9.Future<List<_i12.Note>> getAllNotes() =>
      (super.noSuchMethod(
            Invocation.method(#getAllNotes, []),
            returnValue: _i9.Future<List<_i12.Note>>.value(<_i12.Note>[]),
          )
          as _i9.Future<List<_i12.Note>>);

  @override
  _i9.Future<_i4.NoteDetailResponse> getNote(String? noteId) =>
      (super.noSuchMethod(
            Invocation.method(#getNote, [noteId]),
            returnValue: _i9.Future<_i4.NoteDetailResponse>.value(
              _FakeNoteDetailResponse_3(
                this,
                Invocation.method(#getNote, [noteId]),
              ),
            ),
          )
          as _i9.Future<_i4.NoteDetailResponse>);

  @override
  _i9.Future<List<_i12.Note>> searchNotes(String? query) =>
      (super.noSuchMethod(
            Invocation.method(#searchNotes, [query]),
            returnValue: _i9.Future<List<_i12.Note>>.value(<_i12.Note>[]),
          )
          as _i9.Future<List<_i12.Note>>);

  @override
  _i9.Future<void> debugAuthentication() =>
      (super.noSuchMethod(
            Invocation.method(#debugAuthentication, []),
            returnValue: _i9.Future<void>.value(),
            returnValueForMissingStub: _i9.Future<void>.value(),
          )
          as _i9.Future<void>);

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [AiSettingsService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAiSettingsService extends _i1.Mock implements _i6.AiSettingsService {
  MockAiSettingsService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.AiSettings get settings =>
      (super.noSuchMethod(
            Invocation.getter(#settings),
            returnValue: _FakeAiSettings_4(this, Invocation.getter(#settings)),
          )
          as _i5.AiSettings);

  @override
  bool get isEnabled =>
      (super.noSuchMethod(Invocation.getter(#isEnabled), returnValue: false)
          as bool);

  @override
  bool get canUseAi =>
      (super.noSuchMethod(Invocation.getter(#canUseAi), returnValue: false)
          as bool);

  @override
  _i5.OpenAiSettings get openaiSettings =>
      (super.noSuchMethod(
            Invocation.getter(#openaiSettings),
            returnValue: _FakeOpenAiSettings_5(
              this,
              Invocation.getter(#openaiSettings),
            ),
          )
          as _i5.OpenAiSettings);

  @override
  _i5.WebScrapingSettings get webScrapingSettings =>
      (super.noSuchMethod(
            Invocation.getter(#webScrapingSettings),
            returnValue: _FakeWebScrapingSettings_6(
              this,
              Invocation.getter(#webScrapingSettings),
            ),
          )
          as _i5.WebScrapingSettings);

  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);

  @override
  _i9.Future<void> setAiEnabled(bool? enabled) =>
      (super.noSuchMethod(
            Invocation.method(#setAiEnabled, [enabled]),
            returnValue: _i9.Future<void>.value(),
            returnValueForMissingStub: _i9.Future<void>.value(),
          )
          as _i9.Future<void>);

  @override
  _i9.Future<void> setOpenAiApiKey(String? apiKey) =>
      (super.noSuchMethod(
            Invocation.method(#setOpenAiApiKey, [apiKey]),
            returnValue: _i9.Future<void>.value(),
            returnValueForMissingStub: _i9.Future<void>.value(),
          )
          as _i9.Future<void>);

  @override
  _i9.Future<void> setJinaApiKey(String? apiKey) =>
      (super.noSuchMethod(
            Invocation.method(#setJinaApiKey, [apiKey]),
            returnValue: _i9.Future<void>.value(),
            returnValueForMissingStub: _i9.Future<void>.value(),
          )
          as _i9.Future<void>);

  @override
  _i9.Future<void> setDescriptionMaxLength(int? length) =>
      (super.noSuchMethod(
            Invocation.method(#setDescriptionMaxLength, [length]),
            returnValue: _i9.Future<void>.value(),
            returnValueForMissingStub: _i9.Future<void>.value(),
          )
          as _i9.Future<void>);

  @override
  _i9.Future<void> setMaxTags(int? maxTags) =>
      (super.noSuchMethod(
            Invocation.method(#setMaxTags, [maxTags]),
            returnValue: _i9.Future<void>.value(),
            returnValueForMissingStub: _i9.Future<void>.value(),
          )
          as _i9.Future<void>);

  @override
  _i9.Future<void> clearOpenAiSettings() =>
      (super.noSuchMethod(
            Invocation.method(#clearOpenAiSettings, []),
            returnValue: _i9.Future<void>.value(),
            returnValueForMissingStub: _i9.Future<void>.value(),
          )
          as _i9.Future<void>);

  @override
  _i9.Future<void> clearWebScrapingSettings() =>
      (super.noSuchMethod(
            Invocation.method(#clearWebScrapingSettings, []),
            returnValue: _i9.Future<void>.value(),
            returnValueForMissingStub: _i9.Future<void>.value(),
          )
          as _i9.Future<void>);

  @override
  _i9.Future<void> clearAllAiSettings() =>
      (super.noSuchMethod(
            Invocation.method(#clearAllAiSettings, []),
            returnValue: _i9.Future<void>.value(),
            returnValueForMissingStub: _i9.Future<void>.value(),
          )
          as _i9.Future<void>);

  @override
  _i9.Future<bool> validateOpenAiApiKey(String? apiKey) =>
      (super.noSuchMethod(
            Invocation.method(#validateOpenAiApiKey, [apiKey]),
            returnValue: _i9.Future<bool>.value(false),
          )
          as _i9.Future<bool>);

  @override
  _i9.Future<bool> validateJinaApiKey(String? apiKey) =>
      (super.noSuchMethod(
            Invocation.method(#validateJinaApiKey, [apiKey]),
            returnValue: _i9.Future<bool>.value(false),
          )
          as _i9.Future<bool>);

  @override
  _i9.Future<_i6.OpenAiTestResult> testOpenAiConnection(String? apiKey) =>
      (super.noSuchMethod(
            Invocation.method(#testOpenAiConnection, [apiKey]),
            returnValue: _i9.Future<_i6.OpenAiTestResult>.value(
              _FakeOpenAiTestResult_7(
                this,
                Invocation.method(#testOpenAiConnection, [apiKey]),
              ),
            ),
          )
          as _i9.Future<_i6.OpenAiTestResult>);

  @override
  _i9.Future<_i6.JinaTestResult> testJinaConnection(String? apiKey) =>
      (super.noSuchMethod(
            Invocation.method(#testJinaConnection, [apiKey]),
            returnValue: _i9.Future<_i6.JinaTestResult>.value(
              _FakeJinaTestResult_8(
                this,
                Invocation.method(#testJinaConnection, [apiKey]),
              ),
            ),
          )
          as _i9.Future<_i6.JinaTestResult>);

  @override
  void addListener(_i13.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#addListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void removeListener(_i13.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#removeListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );

  @override
  void notifyListeners() => super.noSuchMethod(
    Invocation.method(#notifyListeners, []),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [BackupService].
///
/// See the documentation for Mockito's code generation for more information.
class MockBackupService extends _i1.Mock implements _i14.BackupService {
  MockBackupService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.S3Config get s3Config =>
      (super.noSuchMethod(
            Invocation.getter(#s3Config),
            returnValue: _FakeS3Config_9(this, Invocation.getter(#s3Config)),
          )
          as _i7.S3Config);

  @override
  _i14.BackupStatus get status =>
      (super.noSuchMethod(
            Invocation.getter(#status),
            returnValue: _i14.BackupStatus.idle,
          )
          as _i14.BackupStatus);

  @override
  bool get isConfigValid =>
      (super.noSuchMethod(Invocation.getter(#isConfigValid), returnValue: false)
          as bool);

  @override
  bool get isBackingUp =>
      (super.noSuchMethod(Invocation.getter(#isBackingUp), returnValue: false)
          as bool);

  @override
  bool get canBackup =>
      (super.noSuchMethod(Invocation.getter(#canBackup), returnValue: false)
          as bool);

  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);

  @override
  _i9.Future<void> loadConfiguration() =>
      (super.noSuchMethod(
            Invocation.method(#loadConfiguration, []),
            returnValue: _i9.Future<void>.value(),
            returnValueForMissingStub: _i9.Future<void>.value(),
          )
          as _i9.Future<void>);

  @override
  _i9.Future<void> saveConfiguration(_i7.S3Config? config) =>
      (super.noSuchMethod(
            Invocation.method(#saveConfiguration, [config]),
            returnValue: _i9.Future<void>.value(),
            returnValueForMissingStub: _i9.Future<void>.value(),
          )
          as _i9.Future<void>);

  @override
  _i9.Future<bool> validateConfiguration({
    _i14.S3VerificationMethod? method = _i14.S3VerificationMethod.standard,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#validateConfiguration, [], {#method: method}),
            returnValue: _i9.Future<bool>.value(false),
          )
          as _i9.Future<bool>);

  @override
  _i9.Future<bool> backupBookmarks() =>
      (super.noSuchMethod(
            Invocation.method(#backupBookmarks, []),
            returnValue: _i9.Future<bool>.value(false),
          )
          as _i9.Future<bool>);

  @override
  _i9.Future<void> clearConfiguration() =>
      (super.noSuchMethod(
            Invocation.method(#clearConfiguration, []),
            returnValue: _i9.Future<void>.value(),
            returnValueForMissingStub: _i9.Future<void>.value(),
          )
          as _i9.Future<void>);

  @override
  void resetStatus() => super.noSuchMethod(
    Invocation.method(#resetStatus, []),
    returnValueForMissingStub: null,
  );

  @override
  void addListener(_i13.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#addListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void removeListener(_i13.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#removeListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );

  @override
  void notifyListeners() => super.noSuchMethod(
    Invocation.method(#notifyListeners, []),
    returnValueForMissingStub: null,
  );
}
